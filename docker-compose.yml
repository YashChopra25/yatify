services:
  client-app:
    container_name: client-app-demo
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./client:/home/client
      - /home/client/node_modules
    depends_on:
      - node-app
    networks:
      - mern_stack_yatify_network

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    env_file:
      - ./.env
    volumes:
      - mongodb_data:/data/db
    networks:
      - mern_stack_yatify_network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo-browser:
    image: mongo-express
    container_name: Browser_mongo_console
    restart: always
    ports:
      - "8081:8081"
    env_file:
      - ./.env
    depends_on:
      - mongodb
    networks:
      - mern_stack_yatify_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - mern_stack_yatify_network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
    depends_on:
      - zookeeper
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - mern_stack_yatify_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - mern_stack_yatify_network

  node-app:
    container_name: node_app_demo
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./server:/home/server
      - /home/server/node_modules
    depends_on:
      - mongodb
      - kafka

    networks:
      - mern_stack_yatify_network

networks:
  mern_stack_yatify_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
